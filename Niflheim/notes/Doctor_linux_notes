======================== doctor linux notes =========================


---------------------------- qrsh -----------------------------------
bash -l # Make bash act as if it had been invoked as a login shell

bsub -q hpcint -Is -J lsTask "ls" # means the ls command runs on an assigned subnode, and then back parent node
bsub -q hpcint -Is -J qrsh "reset; /bin/bash -l" # -Is option submits an interactive job and creates a pseudo-terminal on subnode

for qrsh command inculding the follwing command:
bsub -q hpcint -app qrsh -env TERM,LSF_QRSH -Is -J qrsh "reset; /bin/bash -l" 
# this means You can then switch to another node (dynamically assigned by the system) typing qrsh or linuxsh (includes qrsh command)

----------------------------- module ---------------------------------
module avail
module use
module load

improt!
module display ...
module whatis ...

module use /home/energy/changai/software/modules
vi vesta-gtk3.lua 
	help([[VESTA - you all know vesta]])
	whatis([[VESTA - you all know vesta]])
	conflict("vesta-before")
	prepend_path("PATH", "/home/energy/changai/software/VESTA-gtk3/")


----------------------------- miniconda --------------------------------
wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh

sh Miniconda3-latest-Linux-x86_64.sh -b -p /home/energy/changai/software/miniconda3       #installation finished to prefix path.

#install jupyter notebook
conda install -c conda-forge notebook               #https://jupyter.org/install.html

------------------------------ WSL2 -------------------------------------
======install wsl2 according to guidance of microsoft

======install local remote desktop
sudo apt install xorg   #graphics card driver, graphics environment library and a series of other software packages
sduo apt install xfce4   #lightweight desktop environment
sudo apt install xrdp   #RDP(remote desktop protocal) 
sudo sed -i 's/port=3389/port=3390/g' /etc/xrdp/xrdp.ini   #change defult port from 3389 to 3390
sudo echo xfce4-session >~/.xsession   #write xfce4-session into .xsession
sudo service xrdp restart   #restart xrdp service
--->connect local remote desktop using windows remote desktop connection software. ip: 127.0.0.1:3390, username:acz, password:...

======ssh server installation and operation
1. Host Key Generation
Using the ‘ssh-keygen -A’ command create a host key in the /etc/ssh path.
/etc/ssh$ sudo /etc/init.d/ssh stop
/etc/ssh$ sudo ssh-keygen -A
2. sshd_config Settings
sudo vi /etc/ssh/sshd_config
    only change the line: PasswordAuthentication yes
sudo /etc/init.d/ssh start
3. Connecting from Xshell
ssh localhost:22

=====mount remote disk
sshfs changai@svol.fysik.dtu.dk:/home/energy/changai ~/changai

=====vpn connection
sudo openconnect -u changai extra-vpn.ait.dtu.dk    #then type password
### CONTROL+Z
### bg

======ssh server
ssh changai@svol.fysik.dtu.dk   #then type password

======open X port in order to connect Xming server
export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2}'):0

======set soft link
ln -s /mnt/c/work/ ~/work   #~/work-> /mnt/c/work/ , which is windows disk C:/work/ path

------------------------------- vi skills --------------------------------
:%s/\d\+/\=submatch(0)+5/       #add a integar number to first digit column
sed -n '10,$p' POSCAR | awk '{printf "%16.9f    %16.9f    %16.9f    %s   %s   %s\n",$1, $2, $3+2, $4, $5, $6}' #add 2 in column 2

------------------------------- vim plugin --------------------------------
1. install vim plugin manager - vim-plug
curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
2. install linters and fixers
install python linter flake8: pip/conda install flake8
install python fixer black: pip/conda install black

Importance!
linters: checking syntax and format tools. use flake8 for python3
fixers: fix syntax and format tools. use black for python3

3. install useful plugin via vim-plug
(conda install -c conda-forge vim)
set .vimrc as follows. Pulg ... means install plugin. Save and then type :PlugInstall to install

>>vi .vimrc
"set nu
"highlight LineNr ctermfg=red
"set backspace=indent,eol,start  "when backspack does not work

call plug#begin()

""a file system explorer
Plug 'preservim/nerdtree'
"autocmd vimenter * NERDTree
map <F3> :NERDTreeMirror<CR>
map <F3> :NERDTreeToggle<CR>

""a colorscheme 
"call plug#begin()
"Plug 'altercation/vim-colors-solarized'
"call plug#end()
"syntax enable
"set background=dark
"colorscheme solarized

""a comment functions
Plug 'preservim/nerdcommenter'
let g:mapleader = ","

""insert completion
Plug 'ervandew/supertab'

""syntax checking
"Plug 'vim-syntastic/syntastic'
"set statusline+=%#warningmsg#
"set statusline+=%{SyntasticStatuslineFlag()}
"set statusline+=%*
"let g:syntastic_always_populate_loc_list = 1
"let g:syntastic_auto_loc_list = 1
"let g:syntastic_check_on_open = 1
"let g:syntastic_check_on_wq = 0

""syntax checking
Plug 'dense-analysis/ale'
let g:ale_linters = {'python': ['flake8']}
let g:ale_fixers = {
\    '*': ['remove_trailing_lines', 'trim_whitespace'],
\    'python': ['black']
\}
"let g:ale_fix_on_save = 1
let g:ale_lint_on_enter = 0 "do not check while entering
nmap <F7> :ALEToggle<CR>
nmap <F10> :ALEFix<CR>
nmap sp <Plug>(ale_previous_wrap)
nmap sn <Plug>(ale_next_wrap)

""punctuation complement
Plug 'jiangmiao/auto-pairs'

call plug#end()

>>vi ~/.config/flake8
[flake8]
ignore = E265, E262, E261, E226
max-line-length = 180


################# setuptools ###########################
#reference official docs, packaging the project
python setup.py sdist #source distribution; get *.tar.gz
python setup.py bdist_wheel #build distribution; get *.whl
python setup.py bdist_msi #build windows intaller

#install it
pip install -t ./install/path ./*.tar.gz

or:
tar -zxvf *.tar.gz
cd *
python setup.py install #if permision problem occurs, please open miniconda